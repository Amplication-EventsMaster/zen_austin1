/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Holiday as PrismaHoliday } from "@prisma/client";

export class HolidayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HolidayCountArgs, "select">): Promise<number> {
    return this.prisma.holiday.count(args);
  }

  async holidays<T extends Prisma.HolidayFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HolidayFindManyArgs>
  ): Promise<PrismaHoliday[]> {
    return this.prisma.holiday.findMany<Prisma.HolidayFindManyArgs>(args);
  }
  async holiday<T extends Prisma.HolidayFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HolidayFindUniqueArgs>
  ): Promise<PrismaHoliday | null> {
    return this.prisma.holiday.findUnique(args);
  }
  async createHoliday<T extends Prisma.HolidayCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HolidayCreateArgs>
  ): Promise<PrismaHoliday> {
    return this.prisma.holiday.create<T>(args);
  }
  async updateHoliday<T extends Prisma.HolidayUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HolidayUpdateArgs>
  ): Promise<PrismaHoliday> {
    return this.prisma.holiday.update<T>(args);
  }
  async deleteHoliday<T extends Prisma.HolidayDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HolidayDeleteArgs>
  ): Promise<PrismaHoliday> {
    return this.prisma.holiday.delete(args);
  }
}
